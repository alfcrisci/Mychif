mycotoxins_data=read.csv("https://alfcrisci.github.io/michyf/mycotoxins.csv")
mycotoxins_data=read.csv("https://alfcrisci.github.io/Michyf/mycotoxins.csv")
source('https://alfcrisci.github.io/Mychif/plot_senstivity_aux.r')
BW <- BW            # bodyweight (kg)
read.csv("https://alfcrisci.github.io/Mychif/mycotoxins.csv")
library(rinat)
install.packages("rinat")
library(rinat)
butterflies <- get_inat_obs(query = "Nictalus Leisleri")
get_inat_obs(query = "Nottola")
install.packages("fftw")
install.packages("fftw")
install.packages("fftw")
install.packages("fftwtools")
library("pomp")
library(pomp)
devtools::install_github("kingaa/pomp")
#The R functions for the Ensemble Kalman filter (EnKF)
#can be downloaded from:
source("http://www.datall-analyse.nl/R/EnKF.R")
#Have a look at the function EnKF, and notice that at the beginning of
#the script you will find a description of the function's arguments.
EnKF
EnKF
install.packages("remotes")
remotes::install_github("mrdwab/koboloadeR")
library(devtools)
install_github("unhcr/koboloadeR", ref = "gh-pages")
library("koboloadeR")
kobo_datasets(user = "simvergari:simone1968", api = "kobo")
kobo_datasets(user = "simvergari::simone1968", api = "kobo")
kobo_datasets(user = "simvergari:simone1968", api = "unhcr")
library("koboloadeR")
kobo_datasets(user = "simvergari:simone1968", api = "unhcr")
kobo_datasets2(user = "simvergari:simone1968", api = "unhcr")
library(koboloadeR)
kobo_datasets2(user = "simvergari:simone1968", api = "unhcr")
kobo_datasets()
library(koboloadeR)
detach("package:koboloadeR", unload = TRUE)
library(koboloadeR)
remove.packages("koboloadeR", lib="~/R/x86_64-pc-linux-gnu-library/3.6")
remotes::install_github("mrdwab/koboloadeR")
library(koboloadeR)
kobo_datasets(user = "simvergari:simone1968", api = "unhcr")
kobo_datasets(user = "simvergari:simone1968")
remove.packages("koboloadeR", lib="~/R/x86_64-pc-linux-gnu-library/3.6")
install.packages(koboloadeR)
install.packages("koboloadeR")
install.packages("koboloadeR")
Sys.getenv()
install_github("unhcr/koboloadeR", ref = "gh-pages")
devtools::install_github("unhcr/koboloadeR", ref = "gh-pages")
kobo_data_downloader("123456", "username:password")
library(koboloadeR)
kobo_apps("data_viewer")
kobo_app("data_viewer")
read.csv("https://alfcrisci.github.io/Mychif/mycotoxins.csv")
source('https://alfcrisci.github.io/Mychif/plot_senstivity_aux.r')
#######################################################################################################àà
# Distribution analisys
######################################################################################################################################
# check data in httk sources
mycotoxins_data=read.csv("https://alfcrisci.github.io/Mychif/mycotoxins.csv")
library(reshape)
library(ggplot2)
library(compiler)
library(XLConnect)
######################################################################################
# High-Throughput Toxicokinetics
library(httk)
library(fitdistrplus)
######################################################################################
# devtools::install_github("nanhung/pksensi")
# devtools::install_github("nanhung/pksensi")
# devtools::install_github("nanhung/pksensi")
library(sensitivity) # Sensitivity Analysis
library(pksensi) # Global Sensitivity Analysis in Pharmacokinetic Modeling
library(PK) # Basic Non-Compartmental Pharmacokinetics
library(PKPDmisc) # Pharmacokinetic and Pharmacodynamic Data Management Functions
######################################################################################
library(PKPDsim) # Simulate dose regimens for PKPD models described by ODE or equatino
library(PKPDsimShiny) #
library(shiny)
library(shinydashboard)
################################################################################################################################################################
# Set working directory
################################################################################################################################################################
setwd("/home/alf/Scrivania/lav_michyf/repositories/Mychif/pbkm_modeling")
source("R_code/PBPK_aux.R")
source("R_code/PBTK_model_core.R")
############################################################################################################################
# Loading physicochemical data
chem <- read.csv("data/chem_data_prob.csv", stringsAsFactors = FALSE)      #physicochemical parameters constant are in 1/minutes
# http://www.t3db.ca/toxins
############################################################################################################################
# Loading TK data
TK <- read.csv("data/tk_data/TK_prob.csv",stringsAsFactors=FALSE)                  # toxicokinetic parameters
############################################################################################################################
# Loading physiology data
fBW <- read.csv("data/physio/fBW_animals_prob.csv",stringsAsFactors = FALSE)      # organ fractions, incl var-distribution parameters
fCO <- read.csv("data/physio/fCO_animals_prob.csv",stringsAsFactors = FALSE)      # blood flow fractions, incl var-distribution parameters
rates <- read.csv("data/physio/rates_animals_prob.csv",stringsAsFactors = FALSE)  # physiological rates (not chemical-dependent)
fPC <- read.csv("data/physio/PC_tissue_prob.csv",stringsAsFactors = FALSE)        # tissue composition, fixed during var-analysis
############################################################################################################################
# Defining cases for species and toxins referenced customiing population parameter
#################################################################################################################
# Saint-Cyr et al 100 μg/kg BW
idsim="Swine_DONa"
species <- "swine"                      # cat/cattle/chicken/sheep/swine
chemical <- "DON"                       # for now:
BW_animal=27                            # kg
BW_SD=0                                 # kg standard deviation
F_dose=0.75                             # %
Cl_don=0.52                             # 0.52 ± 0.25 L/h/kg
Vd_don=2.01                             # ± 0.67 L/kg
kel_don=0.003660697                     # 1/min  # 0.2567164 1/h
kabs_don=0.062                          # 1/min   # 3.72 1/h
E_dose <-0.1*F_dose*BW_animal           # Single dose in 2 volte
params <- c(F = F_dose, KA = kabs_don*60, KE = kel_don*60, V = Vd_don)
t <- seq(0, 24, 0.01)
C <-FFPK(params = params, time = t,dose=100)
res=PKPDmisc::nca(t, C, dose=100, last_times = c(3, 4, 5), digits = 2)
png("case_a.png")
plot(t, C, type = "l",xlab = "Hours", ylab = "DON concentration microg/l", main="PK 1cmpt Pig DON \nSaint-Cyr et al 2015")
text(15,15,labels=paste0("Dose=100 μg/kg BW\n",
"F= ",F_dose*100,"%\n",
"Cmax= ",res$Cmax,"\n",
"Tmax= ",res$Tmax," h\n",
"half_life= ",res$half_life," h\n"),col="red")
dev.off()
idsim="Swine_DONb"
species <- "swine"                      # cat/cattle/chicken/sheep/swine
chemical <- "DON"                         # for now:
BW_animal=41                            # kg
BW_SD=6.7                               # kg standard deviation
F_dose=0.986
Cl_don=12.53                            #± 3.89 ml/kg min #0.01253 l/kg min
Vd_don=1.68                             # ± 0.31 l/kg
Tmax=4.85                               # h
Cmax =28.76                             # ng/mL
kel_don=0.002166667                     # 1/min 0.13 1/h
kabs_don=0.01016667                     # 1/min 0.61 1/h
E_dose <-0.075*41*0.986                 # Single dose mg
params <- c(F = F_dose, KA = kabs_don*60, KE = kel_don*60, V = Vd_don)
t <- seq(0, 24, 0.01)
C <-FFPK(params = params, time = t,dose=75)
plot(t, C, type = "l", xlab = "Hours", ylab = "DON concentration")
res=PKPDmisc::nca(t, C, dose=75, last_times = c(3, 4, 5), digits = 2)
png("case_b.png")
plot(t, C, type = "l",xlab = "Hours", ylab = "DON concentration microg/l", main="PK 1cmpt Pig DON \nPaulick et al 2015")
text(15,18,labels=paste0("Dose=100 μg/kg BW\n",
"F= ",F_dose*100,"%\n",
"Cmax= ",res$Cmax,"\n",
"Tmax= ",res$Tmax," h\n",
"half_life= ",res$half_life," h\n"),col="red")
dev.off()
idsim="chicken_ZEN"
species <- "chicken"                      # cat/cattle/chicken/sheep/swine
chemical <- "ZEN"                          # for now: chlorpyrifos/melamine/meloxicam/monensin/oxytetracycline/PFOS
F_dose=0.26
BW_animal=1.56                             # kg
BW_SD=2.32                                 # kg standard deviation
Vd_zea=6.40                                # ± 0.89 l/kg
Cl_zea=0.34                                # ± 0.03  l/h/kg
kel_zea=0.0002333333                      # 1/min 0.53
kabs_zea= 0.01133333                            # 1/min  0.68/60
Tmax_zea=10                                # min
Cmax=15.9                                  # ng/ml
# 1/min 0.6 1/h rate_kabs(10,0.008833333 )
E_dose <-1.2*1.56*F_dose                    # Single dose mg
params <- c(F = F_dose, KA = kabs_zea*60, KE = kel_zea*60, V = Vd_zea/F_dose)
t <- seq(0, 24, 0.01)
C <-FFPK(params = params, time = t,dose=1200)
plot(t, C, type = "l", xlab = "Hours", ylab = "ZEA concentration")
res=PKPDmisc::nca(t, C, dose=1200, last_times = c(3, 4, 5), digits = 2)
png("case_d.png")
plot(t, C, type = "l",xlab = "Hours", ylab = "ZEA concentration microg/l", main="PK 1cmpt Chicken Zea\nBuranatragool et al 2015")
text(15,4,labels=paste0("Dose=1200 μg/kg BW\n",
"F= ",F_dose*100,"%\n",
"Cmax= ",res$Cmax,"\n",
"Tmax= ",res$Tmax," h\n",
"half_life= ",res$half_life," h\n"),col="red")
dev.off()
