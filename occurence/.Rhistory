res_mycotoxin_pig=list()
res_w_pig=list()
for (i in 1:length(res_pig)) {
dose=as.data.frame(res_pig[[i]][,12])
resp=as.data.frame(res_pig[[i]][,20])
timeexp=as.data.frame(res_pig[[i]][,11])
rel_exp=range01(as.data.frame(res_pig[[i]][,11]))
effect=as.data.frame(res_pig[[i]][,15])
mycotoxin=as.data.frame(res_pig[[i]][,10])
weight=as.data.frame(res_pig[[i]][,8])
weight[weight=="ND"]=NA
sex=as.data.frame(res_pig[[i]][,6])
temp_data=data.frame(dose=dose,resp=resp,effect=effect,mycotoxin=mycotoxin,weight=weight,timeexp=timeexp,rel_exp=rel_exp,species="pig",sex=sex)
names(temp_data)=c("dose","resp","effect","mycotoxin","weights","timeexp","rel_exp","species","sex")
temp_data$weights=as.numeric(temp_data$weight)
res_mycotoxin_pig[[i]]=paste0(effect[1,]," ",mycotoxin[1,])
res_w_pig[[i]]=mean(temp_data$weights,na.rm = T)
write.csv(na.omit(temp_data),paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Pig.csv"),row.names = F)
if ( i ==1) {model=LL.4();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative")
}
if ( i ==2) {model=LL.3();
temp_model<- try(drm(resp~dose,
data=temp_data,
weights=temp_data$weigths,
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative")
}
if ( i ==3) {model=LL.3();temp_data=temp_data[-26,];
temp_model<- try(drm(resp~dose,
data=temp_data,
weights=temp_data$weigths,
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative")
}
if ( i ==4) {model=W1.4();
temp_model<- try(drm(resp~dose,
data=temp_data,
weights=temp_data$weigths,
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
if ( i ==5) { model=EXD.3();
temp_data=na.omit(temp_data)
temp_data=temp_data[-6,]
temp_data=temp_data[-8,]
temp_model<- try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T,"inv")
write.csv(temp_data,paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Pig.csv"),row.names = F);
}
if ( i ==6) { model=EXD.3();
temp_data=na.omit(temp_data)
temp_model<- try(drm(resp~dose,
data=temp_data[-14,],
weights=temp_data$weigths[-14,],
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
write.csv(temp_data[-14,],paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Pig.csv"),row.names = F);
}
if ( i ==7 ) {model=W1.4();
temp_model<- try(drm(resp~dose,
data=temp_data,
weights=temp_data$weigths,
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
if ( i ==8) { temp_data=temp_data[-2,];
model=W1.3();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
write.csv(temp_data,paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Pig.csv"),row.names = F);
}
if ( i ==9) { model=LL.4();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
if ( i ==10) {temp_data=temp_data[-7,];
model=LL.4();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
write.csv(temp_data,paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Pig.csv"),row.names = F);
}
if ( i ==11) {temp_data=temp_data[-5,];
model=EXD.3();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
write.csv(temp_data,paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Pig.csv"),row.names = F);
}
if ( i ==12) {temp_data=temp_data[-5,];
model=LL.3();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_pig[[i]]=temp_model
res_bmd5_pig[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
write.csv(temp_data,paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Pig.csv"),row.names = F);
}
png(paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_"," - Pig.png"))
plot(temp_model, col = TRUE, xlab = "Dose(mg/kg feed)", ylab = , main=paste0("Case ",effect[1,]," ",mycotoxin[1,]," - Pig"))
dev.off()
message(paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_"," - Pig.png"))
}
saveRDS(res_model_pig,"res_model_pig.rds")
saveRDS( res_bmd5_pig,"res_bmd5_pig.rds")
saveRDS(res_mycotoxin_pig,"res_mycotoxin_pig.rds")
saveRDS(res_w_pig,"res_w_pig.rds")
#############################################################################################################
res_bmd5_chicken=list()
res_model_chicken=list()
res_mycotoxin_chicken=list()
res_w_chicken=list()
for (i in 1:length(res_chicken)) {
dose=as.data.frame(res_chicken[[i]][,12])
resp=as.data.frame(res_chicken[[i]][,20])
timeexp=as.data.frame(res_chicken[[i]][,11])
rel_exp=ifelse(i!=12,range01(as.data.frame(res_chicken[[i]][,11])),NA)
effect=as.data.frame(res_chicken[[i]][,15])
mycotoxin=as.data.frame(res_chicken[[i]][,10])
weight=as.data.frame(res_chicken[[i]][,8])
weight[weight=="ND"]=NA
sex=as.data.frame(res_chicken[[i]][,6])
temp_data=data.frame(dose=dose,resp=resp,effect=effect,mycotoxin=mycotoxin,weight=weight,timeexp=timeexp,rel_exp=rel_exp,species="chicken",sex=sex)
names(temp_data)=c("dose","resp","effect","mycotoxin","weights","timeexp","rel_exp","species","sex")
temp_data$weights=as.numeric(temp_data$weight)
if ( i ==12) {temp_data=read.csv("Case Kidney weight Aflatoxin_12_chicken.csv")}
res_mycotoxin_chicken[[i]]=paste0(effect[1,]," ",mycotoxin[1,])
res_w_chicken[[i]]=mean(temp_data$weights,na.rm = T)
write.csv(temp_data,paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Chicken.csv"),row.names = F)
#
if ( i ==1) {model=LL.3();
temp_model=try(drm(resp~dose,
data=temp_data,
weights = temp_data$timeexp,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
if ( i ==2) {model=LL.3();
temp_model=try(drm(resp~dose,
data=temp_data,
weights = temp_data$timeexp,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
if ( i ==3) {model=EXD.3();
temp_model=try(drm(resp~dose,
data=temp_data,
weights = temp_data$timeexp,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
if ( i ==4) {temp_data=na.omit(temp_data);
model=W1.3();
temp_model=try(drm(resp~dose,
data=temp_data,
weights = temp_data$timeexp,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
write.csv(temp_data,paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Chicken.csv"),row.names = F)
}
if ( i ==5) {temp_data=na.omit(temp_data);
model=LL.3();
temp_data=temp_data[1:12,]
temp_data$resp=as.numeric(temp_data$resp)
temp_model=try(drm(resp~dose,
data=temp_data,
weights = temp_data$timeexp,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
write.csv(na.omit(temp_data),paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Chicken.csv"),row.names = F)
}
if ( i ==6) {model=LL.4();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
if ( i ==7) {model=LL.4();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
if ( i ==8) {model=LL.4();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
if ( i ==9) {model=W1.4();
temp_data=temp_data[-11,]
temp_data=temp_data[-10,]
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
write.csv(temp_data,paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Chicken.csv"),row.names = F)
}
if ( i ==10) {model=LL.4();
temp_model=try(drm(resp~dose,
data=temp_data[-16,],
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
write.csv(temp_data,paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Chicken.csv"),row.names = F)
}
if ( i ==11) {model=LL.4();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
if ( i ==12) {model=W1.3();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
if ( i ==13) {model=LL.4();
temp_model=try(drm(resp~dose,
data=temp_data[1:7,],
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
write.csv(temp_data,paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Chicken.csv"),row.names = F)
}
if ( i ==14) {
model=LL.4();
temp_model=try(drm(resp~dose,
data=temp_data[c(1:3,6:11),],
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
write.csv(temp_data,paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_Chicken.csv"),row.names = F)
}
if ( i ==15) {model=LL.4();
temp_model=try(drm(resp~dose,
data=temp_data,
fct =model));
res_model_chicken[[i]]=temp_model
res_bmd5_chicken[[i]]=bmd(temp_model, 0.05,backgType="modelBased",def = "relative",sandwich.vcov=T)
}
####################################################################################
png(paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_"," - chicken.png"))
plot(temp_model, col = TRUE, xlab = "Dose(mg/kg feed)", ylab = , main=paste0("Case ",effect[1,]," ",mycotoxin[1,]," - chicken"))
dev.off()
message(paste0("Case ",effect[1,]," ",mycotoxin[1,],"_",i,"_"," - chicken.png"))
}
saveRDS(res_model_chicken,"res_model_chicken.rds")
saveRDS(res_bmd5_chicken,"res_bmd5_chicken.rds")
saveRDS(res_mycotoxin_chicken,"res_mycotoxin_chicken.rds")
saveRDS(res_w_chicken,"res_w_chicken.rds")
res_model_pig=readRDS("res_model_pig.rds")
bmd(res_model_pig[[1]],0.05, backgType="modelBased",def = "relative",sandwich.vcov=T)
bmd(res_model_pig[[1]],0.05, backgType="modelBased",def = "relative",sandwich.vcov=T)
BMD     BMDL
2.67163 2.481263
>
bmd(res_model_pig[[1]],0.05,backg=2, backgType="modelBased",def = "relative",sandwich.vcov=T)
bmd(res_model_pig[[1]],0.05,backg=2, backgType="modelBased",def = "extra",sandwich.vcov=T)
bmd(res_model_pig[[1]],0.05,backg=2, backgType="hybridSD",def = "extra",sandwich.vcov=T)
bmd(res_model_pig[[1]],0.05,backg=1, backgType="hybridSD",def = "extra",sandwich.vcov=T)
bmd(res_model_pig[[1]],0.05,backg=1, backgType="hybridAdd",def = "extra",sandwich.vcov=T)
bmd(res_model_pig[[1]],0.05, backgType="hybridAdd",def = "extra",sandwich.vcov=T)
bmd(res_model_pig[[1]],0.05, backgType="hybridPercentile",def = "extra",sandwich.vcov=T)
bmd(res_model_pig[[1]],0.05, backg = 2, backgType = "hybridSD", def = "hybridAdd", ,sandwich.vcov=T)
bmd(res_model_pig[[1]],0.05, backg = 2, backgType = "hybridSD", def = "hybridAdd")
bmd(res_model_pig[[1]], backg = 2, backgType = "hybridSD", def = "hybridAdd")
bmd(res_model_pig[[1]], backg = 1, backgType = "hybridSD", def = "hybridAdd")
bmd(res_model_pig[[1]],0.1, backg = 1, backgType = "hybridSD", def = "hybridAdd")
bmd(res_model_pig[[1]],0.1, backg = 2, backgType = "hybridSD", def = "hybridAdd")
bmd(res_model_pig[[1]],0.1, backg = 1, backgType = "hybridSD", def = "hybridAdd")
lapply(res_model_pig,function(x) bmd(x,0.1, backg = 1, backgType = "hybridSD", def = "hybridAdd"))
lapply(res_model_pig,function(x) bmd(x,0.1, backg = 2, backgType = "hybridSD", def = "hybridAdd"))
lapply(res_model_pig,function(x) bmd(x,0.1, backg = 1, backgType = "hybridSD", def = "hybridAdd"))
lapply(res_model_pig[[11]],function(x) bmd(x,0.1, backg = 2, backgType = "hybridSD", def = "hybridAdd"))
lapply(res_model_pig,function(x) bmd(x,0.1, backg = 2, backgType = "hybridSD", def = "extra"))
lapply(res_model_pig,function(x) bmd(x,0.1, backg = 2, backgType = "hybridSD", def = "hybridAdd",sandwich.vcov=T))
lapply(res_model_pig,function(x) bmd(x,0.1, backg = 1, backgType = "hybridSD", def = "hybridAdd",sandwich.vcov=T))
res_bmd10_1S_chicken=lapply(res_model_chicken,function(x) bmd(x,0.1, backg = 1, backgType = "hybridSD", def = "hybridAdd",sandwich.vcov=T))
res_bmd10_2S_chicken=lapply(res_model_chicken,function(x) bmd(x,0.1, backg = 2, backgType = "hybridSD", def = "hybridAdd",sandwich.vcov=T))
do.call("rbind",lapply(res_bmd10_1S_pig,function(x) c(x$Results,x$interval[2])))
res_bmd10_1S_pig=lapply(res_model_pig,function(x) bmd(x,0.1, backg = 1, backgType = "hybridSD", def = "hybridAdd",sandwich.vcov=T))
do.call("rbind",lapply(res_bmd10_1S_pig,function(x) c(x$Results,x$interval[2])))
res_final_pig=data.frame(unlist(res_mycotoxin_pig),
unlist(res_w_pig),
unlist(lapply(res_model_pig,function(x) summary(x)$text)),
do.call("rbind",lapply(res_bmd5_pig,function(x) c(x$Results,x$interval[2]))),
do.call("rbind",lapply(res_bmd10_1S_pig,function(x) c(x$Results,x$interval[2])))
)
res_bmd5_pig
do.call("rbind",lapply(res_bmd5_pig,function(x) c(x$Results,x$interval[2])))
do.call("rbind",lapply(res_bmd10_1S_pig,function(x) c(x$Results,x$interval[2])))
unlist(lapply(res_model_pig,function(x) summary(x)$text))
res_final_pig=data.frame(unlist(res_mycotoxin_pig),
unlist(res_w_pig),
unlist(lapply(res_model_pig,function(x) summary(x)$text)),
do.call("rbind",lapply(res_bmd5_pig,function(x) c(x$Results,x$interval[2]))),
do.call("rbind",lapply(res_bmd10_1S_pig,function(x) c(x$Results,x$interval[2])))
)
res_final_pig
res_model_pig=readRDS("res_model_pig.rds")
res_bmd5_pig=readRDS("res_bmd5_pig.rds")
res_model_chicken=readRDS("res_model_chicken.rds")
res_bmd5_chicken=readRDS("res_bmd5_chicken.rds")
res_bmd10_1S_pig=lapply(res_model_pig,function(x) bmd(x,0.1, backg = 1, backgType = "hybridSD", def = "hybridAdd",sandwich.vcov=T))
res_bmd10_1S_chicken=lapply(res_model_chicken,function(x) bmd(x,0.1, backg = 1, backgType = "hybridSD", def = "hybridAdd",sandwich.vcov=T))
res_pig=readRDS("res_pig.rds")
res_chicken=readRDS("res_chicken.rds")
res_final_pig=data.frame(unlist(res_mycotoxin_pig),
unlist(res_w_pig),
unlist(lapply(res_model_pig,function(x) summary(x)$text)),
do.call("rbind",lapply(res_bmd5_pig,function(x) c(x$Results,x$interval[2]))),
do.call("rbind",lapply(res_bmd10_1S_pig,function(x) c(x$Results,x$interval[2])))
)
names(res_final_pig)=c("case","mean_weigth","modeltype","BMD5","BMDL5","BMDU5","BMD10_1S","BMDL10_1S","BMDU10_1S")
file.remove("fit_BMDL.xls")
XLConnect::writeWorksheetToFile("fit_BMDL.xls",res_final_pig,"Pig")
res_final_chicken=data.frame(unlist(res_mycotoxin_chicken),
unlist(res_w_chicken),
unlist(lapply(res_model_chicken,function(x) summary(x)$text)),
do.call("rbind",lapply(res_bmd5_chicken,function(x) c(x$Results,x$interval[2]))),
do.call("rbind",lapply(res_bmd10_1S_chicken,function(x) c(x$Results,x$interval[2])))
)
names(res_final_chicken)=c("case","mean_weigth","modeltype","BMD5","BMDL5","BMDU5","BMD10_1S","BMDL10_1S","BMDU10_1S")
XLConnect::writeWorksheetToFile("fit_BMDL.xls",res_final_chicken,"Chicken")
setwd("/home/alf/Scrivania/lav_michyf/repo/Mychif/occurence")
source("load_lib.r")
source("aux_mycosources.r")
res_tot=readRDS("data/res_tot_min5.rds")
res_data=readRDS("data/res_data_min5.rds")
res_names=readRDS("data/res_names_min5.rds")
res_pooled=readRDS("data/res_pooled_min5.rds")
plant_myco_db=readRDS("data/plant_myco_db.rds")
plant_myco_db_occ=readRDS("data/plant_myco_db_occ_tot.rds")
#########################################################################################################
# filtering by general final bibliometrics score
tresh=2.5
index=which(plant_myco_db$scoreGEN>tresh)
plant_myco_db_sel=plant_myco_db[index,]
names(plant_myco_db_sel)
#########################################################################################################
# create color palette
col.pal2=colorRampPalette(c("white", "yellow", "red"))(216)
?pheatmap
mycotoxs =unique(as.character(plant_myco_db_sel$mycotoxins))
j=1
data=subset(plant_myco_db_sel,mycotoxins==mycotoxs[1])[,c(1,5:7,9:12)]
row.names(data)=data$plants
data=data[,2:length(data)]
as.character(mycotoxs[j])
pheatmap(data, color = col.pal2,cluster_rows = F,
cluster_cols = F,
angle_col=0,
border_color="gray",
cellwidth = 60, cellheight = 30,
main=paste("Heatmap  of ",as.character(mycotoxs[j])),
fontsize_row=10,
filename = paste0("Heatmap_",as.character(mycotoxs[j]),".png")
)
pheatmap(data, color = col.pal2,cluster_rows = F,
cluster_cols = F,
angle_col=0,
border_color="gray",
cellwidth = 60, cellheight = 30,
main=paste("Heatmap  of ",as.character(mycotoxs[j])),
fontsize=8,
filename = paste0("Heatmap_",as.character(mycotoxs[j]),".png")
)
pheatmap(data, color = col.pal2,cluster_rows = F,
cluster_cols = F,
angle_col=0,
border_color="gray",
cellwidth = 60, cellheight = 30,
main=paste("Heatmap  of ",as.character(mycotoxs[j])),
fontsize=8,
height=3,
filename = paste0("Heatmap_",as.character(mycotoxs[j]),".png")
)
mycotoxs =unique(as.character(plant_myco_db_sel$mycotoxins))
for ( j in 1:length(mycotoxs)) {
data=subset(plant_myco_db_sel,mycotoxins==mycotoxs[1])[,c(1,5:7,9:12)]
row.names(data)=data$plants
data=data[,2:length(data)]
pheatmap(data, color = col.pal2,cluster_rows = F,
cluster_cols = F,
angle_col=0,
border_color="gray",
cellwidth = 60, cellheight = 30,
main=paste("Heatmap  of ",as.character(mycotoxs[j])),
fontsize=8,
height=5,
filename = paste0("Heatmap_",as.character(mycotoxs[j]),".png")
)
}
plant_myco_db_sel
mycotoxs =unique(as.character(plant_myco_db_sel$mycotoxins))
for ( j in 1:length(mycotoxs)) {
data=subset(plant_myco_db_sel,mycotoxins==mycotoxs[1])[,c(1,5:7,9:12)]
row.names(data)=data$plants
data=data[,2:length(data)]
pheatmap(data, color = col.pal2,cluster_rows = F,
cluster_cols = F,
angle_col=0,
border_color="gray",
cellwidth = 60, cellheight = 30,
main=paste("Heatmap  of ",as.character(mycotoxs[j])),
fontsize=8,
height=3,
filename = paste0("Heatmap_",as.character(mycotoxs[j]),".png")
)
}
?ggsave
plant_myco_db_sel$check_names=unlist(res_names[index])
plant_myco_db_sel[,c(1:2,14)] # check only
res_dists=list()
res_dists_names=list()
res_summary=list()
z=1
for ( i in index) {
x=as.numeric(res_pooled[[i]])
outfilepdf=gsub(" ","_",paste0(as.character(res_names[i]),"_dists.pdf"))
outfilepng=gsub(" ","_",paste0(as.character(res_names[i]),"_dists.png"))
#######################################################
dists=list()
j=1
idlist=c(NULL)
fw <- try(fitdist(x,"weibull"))
if (!grepl("Error",fw)) {dists[[j]]=fw;idlist=c("weibull");j=j+1}
fg <- try(fitdist(x,"gamma"))
if (!grepl("Error",fg)) {dists[[j]]=fg;idlist=c(idlist,"gamma"); j=j+1 }
fln <- try(fitdist(x,"lnorm"))
if (!grepl("Error",fln)) {dists[[j]]=fln;idlist=c(idlist,"lognormal");j=j+1 }
flnor <- try(fitdist(x,"norm"))
if (!grepl("Error",flnor)) {dists[[j]]=flnor;idlist=c(idlist,"normal") }
ds=denscomp(dists,legendtext=eval(idlist),plotstyle = "ggplot")
qq=qqcomp(dists,legendtext=eval(idlist),plotstyle = "ggplot")
cd=cdfcomp(dists,legendtext=eval(idlist),plotstyle = "ggplot")
pp=ppcomp(dists,legendtext=eval(idlist),plotstyle = "ggplot")
out=ggarrange(ds, qq, cd,pp + rremove("x.text"), ncol = 2, nrow = 2)
options(warn=0)
ggsave(outfilepdf,plot=out, width = 8, height = 7,device="pdf")
ggsave(outfilepng,plot=out, width = 8, height = 7,device="png")
#######################################################
res_dists_names[[z]]=idlist
res_dists[[z]]=dists
res_summary[[z]]=summary_large(x)
z=z+1
}
mycotoxs
j=1
data=subset(plant_myco_db_sel,mycotoxins==mycotoxs[1])[,c(1,5:7,9:12)]
data
data$plants
plant_myco_db_sel
mycotoxs
mycotoxs[12]
j=12
data=subset(plant_myco_db_sel,mycotoxins==mycotoxs[1])[,c(1,5:7,9:12)]
data
data=subset(plant_myco_db_sel,mycotoxins==mycotoxs[1])
data
mycotoxs =unique(as.character(plant_myco_db_sel$mycotoxins))
for ( j in 1:length(mycotoxs)) {
data=subset(plant_myco_db_sel,mycotoxins==mycotoxs[j])[,c(1,5:7,9:12)]
row.names(data)=data$plants
data=data[,2:length(data)]
pheatmap(data, color = col.pal2,cluster_rows = F,
cluster_cols = F,
angle_col=0,
border_color="gray",
cellwidth = 60, cellheight = 30,
main=paste("Heatmap  of ",as.character(mycotoxs[j])),
fontsize=8,
height=3,
filename = paste0("Heatmap_",as.character(mycotoxs[j]),".png")
)
}
